package com.isfootball.jdbc.rep.db;

import java.sql.SQLException;
import org.springframework.jdbc.core.RowMapper;
import java.sql.ResultSet;
import java.util.LinkedHashMap;
import java.util.Map;
import com.nurkiewicz.jdbcrepository.RowUnmapper;
import com.isfootball.jdbc.Teams;

/**
 * This class is generated by Spring Data Jdbc code generator.
 *
 * @author Spring Data Jdbc Code Generator
 */
public class TeamsDB
{

	private static String TABLE_NAME = "TEAMS";

	private static String TABLE_ALIAS = "tea";

	public static String getTableName()
	{
		return TABLE_NAME;
	}

	public static String getTableAlias()
	{
		return TABLE_NAME + " as " + TABLE_ALIAS;
	}

	public static String getAlias()
	{
		return TABLE_ALIAS;
	}

	public static String selectAllColumns(boolean ... useAlias)
	{
		return (useAlias[0] ? TABLE_ALIAS : TABLE_NAME) + ".*";
	}

	public enum COLUMNS
	{
		TEAM("team"),
		NAME_RUS("name_rus"),
		COUNTRY("country"),
		LEAGUE("league"),
		;

		private String columnName;

		private COLUMNS (String columnName)
		{
			this.columnName = columnName;
		}

		public void setColumnName (String columnName)
		{
			this.columnName = columnName;
		}

		public String getColumnName ()
		{
			return this.columnName;
		}

		public String getColumnAlias ()
		{
			return TABLE_ALIAS + "." + this.columnName;
		}

		public String getColumnAliasAsName ()
		{
			return TABLE_ALIAS  + "." + this.columnName + " as " + TABLE_ALIAS + "_" + this.columnName;
		}

		public String getColumnAliasName ()
		{
			return TABLE_ALIAS + "_" + this.columnName;
		}

	}

	public TeamsDB ()
	{

	}

	public static final RowMapper<Teams> ROW_MAPPER = new TeamsRowMapper ();
	public static final class  TeamsRowMapper implements RowMapper<Teams>
	{
		public Teams mapRow(ResultSet rs, int rowNum) throws SQLException 
		{
			Teams obj = new Teams();
			obj.setTeam(rs.getString(COLUMNS.TEAM.getColumnName()));
			obj.setNameRus(rs.getString(COLUMNS.NAME_RUS.getColumnName()));
			obj.setCountry(rs.getString(COLUMNS.COUNTRY.getColumnName()));
			obj.setLeague(rs.getString(COLUMNS.LEAGUE.getColumnName()));
			return obj;
		}
	}

	public static final RowUnmapper<Teams> ROW_UNMAPPER = new TeamsRowUnmapper ();
	public static final class TeamsRowUnmapper implements RowUnmapper<Teams>
	{
		public Map<String, Object> mapColumns(Teams teams)
		{
			Map<String, Object> mapping = new LinkedHashMap<String, Object>();
			mapping.put(COLUMNS.TEAM.getColumnName(), teams.getTeam());
			mapping.put(COLUMNS.NAME_RUS.getColumnName(), teams.getNameRus());
			mapping.put(COLUMNS.COUNTRY.getColumnName(), teams.getCountry());
			mapping.put(COLUMNS.LEAGUE.getColumnName(), teams.getLeague());
			return mapping;
		}
	}

	public static final RowMapper<Teams> ALIAS_ROW_MAPPER = new TeamsAliasRowMapper ();
	public static final class  TeamsAliasRowMapper implements RowMapper<Teams>
	{
		public Teams mapRow(ResultSet rs, int rowNum) throws SQLException 
		{
			Teams obj = new Teams();
			obj.setTeam(rs.getString(COLUMNS.TEAM.getColumnAliasName()));
			obj.setNameRus(rs.getString(COLUMNS.NAME_RUS.getColumnAliasName()));
			obj.setCountry(rs.getString(COLUMNS.COUNTRY.getColumnAliasName()));
			obj.setLeague(rs.getString(COLUMNS.LEAGUE.getColumnAliasName()));
			return obj;
		}
	}

	public static StringBuffer getAllColumnAliases ()
	{
		StringBuffer strBuf = new StringBuffer ();
		int i = COLUMNS.values ().length;
		for (COLUMNS c : COLUMNS.values ())
		{
			strBuf.append (c.getColumnAliasAsName ());
			if (--i > 0)
				strBuf.append (", ");
		}
		return strBuf;
	}

	/* START Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/

	/* END Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/

}